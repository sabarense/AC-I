01.) Determinar os complementos para os valores e as quantidades de bits indicadas:

	a.) C 1,6 (1001 (2)) = 110110(2)
	b.) C 1,8 (1110 (2)) = 11110001(2)
	c.) C 2,6 (110111 (2)) = 000101(2)
	d.) C 2,7 (10101 (2)) = 1101011(2)
	e.) C 2,8 (111101 (2)) = 11001111(2)

02.) Determinar os complementos para os valores e as quantidades indicadas:

	a.) C 1,6 (231 (4) ) = 101101 -> 010010 ->010011  (2)
	b.) C 1,8 (5C (16) ) = 01011100 -> 10100011 -> 10100100 (2)
	c.) C 2,6 (312 (4) ) = 110110 -> 001001 -> 001010(2)
	d.) C 2,7 (157 (8) ) = 001101111 -> 0010000-> 0101001 (2)
	e.) C 2,8 (E3 (16) ) = 11100011 -> 00011100 -> 00011101 (2)

03.) Determinar os valores positivos equivalentes aos complementos indicados:

	a.) 1 0111 (2) = 11101000 -> 11101001 -> -23(10)
	b.) 1 10101 (2) = 1001010 -> 11001011 -> -53(10)
	c.) 1 10110 (2) = 001001 -> 00001010 -> 10 (2)
	d.) 1 011001 (2) = 10100110 -> 10100111 -> -89 -> 39 (2)
	e.) 1 0100101 (2) = 101011010 -> 01011011 -> 91 -> -37 -> 5b (16)

04.) Fazer as operações indicadas mediante uso de complemento:

	a.) 11110 (2) - 1101 (2) = 00010001(2)
	b.) 101,1001 (2) - 10,11 (2) = 11001110 (2)
	c.) 231 (4) - 123 (4) =  102 (4) 022(8)
	d.) 321 (8) - 123 (8) = 176 (8)
	e.) 9C3 (16) - A1B (16) = A8 (16)

05.) Executar as operações abaixo:

	a.) 101110 (2) – 1101 (2) = 100001
	b.) 101,1110 (2) – 2,3 (8) = 11,1000
	c.) 213 (4) – F (16) = 100111 - 1111 = 11000
	d.) AC (16 ) – 1001011 (2) = 10101100 - 1001011 = 1100001 
	e.) 3A (16) – 2B (16) = 00111010 - 00101011 = 1111
